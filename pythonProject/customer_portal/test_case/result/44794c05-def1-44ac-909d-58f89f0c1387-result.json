{"name": "test_view_coverage_check_daily_hospital_benefit", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <customer_portal.test_case.test_case.TestClaimForm object at 0x7fdda45f5940>\n\n    @allure.story(\"检查coverage的Daily Hospital Income Benefit\")\n    def test_view_coverage_check_daily_hospital_benefit(self):\n        self.coc_no = \"HCACOC65586238\"\n        self.benefit = \"Daily Hospital Income Benefit\"\n        self.content = \"PHP1,000.00 per day (max of 15 days)\"\n    \n        main = PolicyPage()\n>       content = main.goto_claim_form(self.coc_no).view_coverage_check_benefit(self.benefit)\n\ntest_case.py:182: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page_object/policy_page.py:107: in goto_claim_form\n    self.wait(5,ele_continue)\n../page_object/base_page.py:92: in wait\n    WebDriverWait(self.driver, second, 0.5).until(expected_conditions.element_to_be_clickable(element))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eb0130ead221eb0f9cf8cca89fd90995\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fdda462cca0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../../PycharmProjects/pythonProject/venv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException"}, "start": 1638522554574, "stop": 1638522569517, "uuid": "75af7dbf-5bfd-4b05-80c6-1375680ccf31", "historyId": "46371ca297a76b617f2babaf952bf64a", "testCaseId": "4348dccff8274232a55b20263c40c469", "fullName": "test_case.TestClaimForm#test_view_coverage_check_daily_hospital_benefit", "labels": [{"name": "feature", "value": "claim form页面功能"}, {"name": "story", "value": "检查coverage的Daily Hospital Income Benefit"}, {"name": "suite", "value": "test_case"}, {"name": "subSuite", "value": "TestClaimForm"}, {"name": "host", "value": "xiongjundeMBP.lan"}, {"name": "thread", "value": "20384-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case"}]}